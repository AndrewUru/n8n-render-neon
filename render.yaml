# Use this Blueprint to deploy n8n on Render as a web
# service that uses a Postgres database to store
# workflow data.
#
# This Blueprint uses free instance types (specified by
# `plan`) for both the web service and the database. You
# can upgrade to paid instance types at any time to
# increase resources.

# n8n on Render using Neon (Postgres) as external DB
services:
  - type: web
    plan: free
    runtime: image
    name: n8n-service
    image:
      url: docker.io/n8nio/n8n:latest

    envVars:
      # --- Security ---
      - key: N8N_ENCRYPTION_KEY
        generateValue: true
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        value: admin
      - key: N8N_BASIC_AUTH_PASSWORD
        value: <An32Santos>

      # --- Timezone ---
      - key: GENERIC_TIMEZONE
        value: Europe/Madrid

      # --- Webhook URL (actualízala después del primer deploy) ---
      - key: WEBHOOK_URL
        value: https://<tu-servicio>.onrender.com/

      # --- Database: Neon Postgres ---
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        value: ep-cold-butterfly-af7x6vbp-pooler.c-2.us-west-2.aws.neon.tech
      - key: DB_POSTGRESDB_PORT
        value: "5432"
      - key: DB_POSTGRESDB_DATABASE
        value: neondb
      - key: DB_POSTGRESDB_USER
        value: neondb_owner
      - key: DB_POSTGRESDB_PASSWORD
        value: npg_T2rkilBd6KmO
      - key: DB_POSTGRESDB_SSL_ENABLED
        value: "true"
      # Si hay problemas de SSL, descomenta las siguientes dos líneas:
      # - key: DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED
      #   value: "false"
